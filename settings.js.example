/*
  This is the example configuration file for bionet
  Copy this file to settings.js and edit as needed.
*/

var path = require('path');

var settings = {

  hostname: 'localhost', // bind to this hostname or IP (assumes all if undefined)
  port: 8000, // bind to this port

  // Port for low-level access to db via multilevel.
  dbPort: 13377, 

  // The url where this app is accessed
  // Used for generating email links
  base_url: 'http://localhost:8000',

  // set debug to true for lots of helpful debug info on console
  // debug mode enables sending of emails and instead prints them to console
  debug: false, 

  loginToken: {
    secret: "MY UNIQUE SECRET", // must be a unique secret
    expiration: 14 // login token expiration in days
  },

  // If set, this master password is required to sign up
  // if falsy, only admins can create users
  //  must be set in www/settings.js
  // or the UI will not reflect the change
  userSignupPassword: 'code',

  mailer: {
    type: "smtp", // can also be "direct" or "console"
    host: "localhost", // only needed for type: "smtp"
    port: 25, // only needed for type: "smtp"
    tls: false,
    from_address: "noreply@example.org",
    subjectPrefix: "[bionet.myhost.org]" // system email subjects are prefixed with this
  },

  // ----------
  // File paths
  // Note: All file paths are converted to absolute paths on app startup
  // ----------

  // where static files are located
  staticPath: 'www',

  // Where files uploaded/generated by users are stored
  userFilePath: 'user_static',

  // Settings related to label printing
  printing: {

    // Where label image files are stored.
    // Relative to userFilePath
    labelImageFilePath: 'labels',

    // hostname where we should listen for printer client connections
    // (this is optional: falls back to settings.hostname if not specified)
    serverHost: "localhost",

    // port where we should listen for printer client connections
    serverPort: 4200,

    // path to the host ssh private key
    hostKey: path.join(__dirname, 'print_host_keys', 'myhostkey'),

    // path to the public key of the printer client
    clientKey: path.join(__dirname, 'print_client_keys', 'mykey.pub')

  },

  dataTypes: 
    [{
      name: "lab",
      fields: {
        Description: 'text'
      }
    },{
      name: "-80 freezer",
      fields: {
        Description: 'text',
        Shelf: 'text',
        Rack: 'text',
        Box: 'text'
      }
    },{
      name: "-20 freezer",
      fields: {
        Description: 'text',
        Shelf: 'text',
        Rack: 'text',
        Box: 'text'
      }
    },{
      name: "-4 fridge",
      fields: {
        Description: 'text',
        Shelf: 'text',
        Rack: 'text',
        Box: 'text'
      }
    },{
      name: "freezer rack",
      fields: {
        Description: 'text'
      }
    },{
      name: "8 x 12 freezer box",
      fields: {
        Description: 'text'
      }
    },{
      name: "9 x 9 freezer box",
      fields: {
        Description: 'text'
      }
    },{
      name: "freezer box",
      fields: {
        Description: 'text'
      }
    },{
      name: "shelving unit",
      fields: {
        Description: 'text'
      }
    },{
      name: "shelf",
      fields: {
        Description: 'text'
      }
    },{
      name: "cabinet",
      fields: {
        Description: 'text'
      }
    },{
      name: "drawer",
      fields: {
        Description: 'text'
      }
    },{
      name: "organism",
      virtual: true,
      fields: {
        Genotype: 'text',
        Sequence: 'text'
      }
    },{
      name: "vector",
      virtual: true,
      fields: {
        Description: 'text',
        Sequence: 'text'
      }
    },{
      name: "single-stranded",
      virtual: true,
      fields: {
        Description: 'text',
        Sequence: 'text'
      }
    },{
      name: "double-stranded",
      virtual: true,
      fields: {
        Description: 'text',
        Sequence: 'text'
      }
    },{
      name: "chemical stock",
      virtual: true,
      fields: {
        Description: 'text'
      }
    }],


   // the relative URL at which symbol files 
   // for the label generator are available
   symbolPath: '/static/symbols',
 
   // If false, anyone can create users
   // if true, only admins can create users (ToDo not implemented yet)
   // !!!IMPORTANT!!! 
   // IF true userSignupPassword must also be set
   // or it will still be possible for anyone to create users
   // the setting in this file only affects the UI and provides no security
   restrictUserSignup: true
};

settings.printing.labelImageFilePath = path.resolve(path.join(settings.userFilePath, settings.printing.labelImageFilePath));

module.exports = settings;